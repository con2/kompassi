extends base
- load trans from i18n
block title
  {% trans "Onboarding" %}

block content
  .panel.panel-default
    .panel-heading: strong {% trans "Onboarding" %}
    .panel-body
      .text-muted
        p Merkitse henkilö saapuneeksi klikkaamalla taulukon riviä. Haku toimii välittömästi ilman rivinvaihdon tmv. painallusta ja hakee ainoastaan nimikentästä.
        p Viemällä hiiren osoittimen henkilöstöluokan nimen päälle näet, mitä kyseisen henkilöstöluokan henkilölle annetaan, mikäli tämä tieto on syötetty.
      .form-group
        label(for='onboarding_search') {% trans "Search" %}
        input#onboarding_search.form-control(type='search')
    table.table.table-striped.onboarding__table
      thead
        tr
          th
          th {% trans "Personnel class" %}
          th
            span.kompassi-icon-space-right {% trans "Name" %}
            if not event.badges_event_meta.real_name_must_be_visible
              small.kompassi-icon-space-left.text-muted(style='font-weight: normal') Badgessa näkyvät tiedot <strong>lihavoitu</strong>.
          th {% trans "Job title" %}
          if shirt_type_field
            th {% trans "Shirt type" %}
          if shirt_size_field
            th {% trans "Shirt size" %}
          if is_perks_column_shown
            th {% trans "Perks" %}
      tbody
        for badge in badges
          tr.a_badge(data-id=badge.id, class='{% if badge.is_arrived %}badge--arrived success{% endif %}')
            td.status.fa-fw
              i.fa.fa-spinner.fa-pulse.status__loading
              i.fa.fa-check.status__success
            td.personnel_class(data-slug=badge.personnel_class.slug)
              | {{ badge.personnel_class }}
            td.name
              if event.badges_event_meta.real_name_must_be_visible
                | {{ badge.full_name }}
              else
                if badge.is_first_name_visible
                  strong {{ badge.first_name }}
                else
                  span.text-muted {{ badge.first_name }}
                if badge.is_nick_visible and badge.nick
                  | &#32;
                  strong ”{{ badge.nick }}”
                if badge.is_surname_visible
                  | &#32;
                  strong {{ badge.surname }}
                else
                  | &#32;
                  span.text-muted {{ badge.surname }}

            td.title= badge.job_title
            if shirt_type_field
              td.shirt_type= badge.shirt_type
            if shirt_size_field
              td.shirt_size= badge.shirt_size
            if is_perks_column_shown
              td.perks= badge.formatted_perks

block extra_head
  style.
    .a_badge {
      cursor: pointer;
    }
    .status {
      box-sizing: content-box;
    }
    .status .fa {
      display: none;
    }
    .badge--loading .status__loading {
      display: inline;
    }
    .badge--arrived .status__success {
      display: inline;
    }
    .badge--loading .status__success {
      display: none;
    }
    .perky {
      text-decoration: underline;
      text-decoration-style: dashed;
    }

block extra_scripts
  script(src='https://cdn.jsdelivr.net/lodash/4.13.1/lodash.min.js')
  script.
    var $search = $('#onboarding_search')
    var $badges = $('.onboarding__table .a_badge')

    $search.on('input', _.throttle(function (evt) {
      var searchText = evt.target.value
      var matcher = new RegExp(searchText, 'i')

      $badges.each(function () {
        var $this = $(this)
        var name = $this.children('.name').text()
        var match = matcher.test(name)
        $this.toggleClass('hidden', !match)
      })
    }, 100))

    $badges.on('click', _.throttle(function () {
      var $this = $(this)
      if ($this.hasClass('badge--loading')) return
      var id = $this.data('id')
      var arrived = $this.hasClass('badge--arrived')
      var newArrivedState = !arrived
      var data = { id: id, arrived: newArrivedState, csrfmiddlewaretoken: '{{ csrf_token }}' }
      $this.addClass('badge--loading')
      $.post('{% url "badges_admin_onboarding_view" event.slug %}', data)
        .done(function () {
          $this.toggleClass('badge--arrived success', newArrivedState)
        })
        .fail(function (xhr, status, errorText) {
          alert(errorText)
        })
        .always(function () {
          $this.removeClass('badge--loading')
        })
    }, 500, { trailing: false }))
